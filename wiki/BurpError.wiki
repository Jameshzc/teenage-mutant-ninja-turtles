=Analysing fuzz data using Burp Intruder=

After you successfully fuzz the targeted Web Application variables, then you would have to do some analysis on the data returned back. You can analyse the results by using the Burp three different Grep features:

  # Grep Match 
  # Grep Extract 
  # Grep Payload

*Note:* These features are found in Burp Intruder TAB -> Options TAB. The results view TAB contains several menus with commands for controlling the attack, and saving the results, server responses and the attack itself. The free version of Burp Proxy also includes these features, the only bad thing about the free version is that it will add throttling, increasing the amount of time it takes to finish the attack.

== Analysing SQL fuzzing results ==

To do that after fuzzing the variables with SQL injection payloads you go to TAB Options and then you process your results using the features mentioned above. One of the most interesting features found in Burp Intruder are the Grep Match tool. With Grep Mach you use regular expressions in order to identify and extract complex patterns of interest.

http://1.bp.blogspot.com/-oQcdNlc6KAg/UFB5SAJExxI/AAAAAAAAA8w/qZEcB67qu_k/s1600/Results3.png

*Note:* Grep Match can help you locate the error messages within the server responses using Burp default list or your own costume error list taken from teenage mutant ninja turtles (the error file payloads). The Grep Match feature will help you to identify errors returned back from the web application, this feature is good for identifying SQL injection issues (e.g. by greping database errors), XML injection issues and Path Traversal  injection issues, but it wont be much of a help to XSS attacks. With Grep Match you can also use complex regular expressions to filter your results.  

== Exploiting SQL Injections ==

The most appropriate tool for exploiting SQL vulnerabilities is Grep Extract:

http://4.bp.blogspot.com/-CKw1f7c3HLY/UFB5h5dJDFI/AAAAAAAAA84/f65LNUj_02Y/s1600/Results4.png

*Note:* Grep Extract can help you extract information from the server responses using Burp Intruder default list or your own costume list taken from teenage mutant ninja turtles (the error payload file).  Grep Extract when properly configured can mimic the behavior of famous tools such as SQLMap and Absinth to help you extract data from the database. It will save you time from writing your own script to exploit a SQL injection vulnerability.   

== Analysing XSS fuzzing results ==

The most appropriate tool for analysing XSS fuzz data is Grep Payload:

http://4.bp.blogspot.com/-CJUPr0VPFoU/UFB5r_QxclI/AAAAAAAAA9A/E4dPXtBxl9g/s1600/Results5.png

*Note:* Grep Payload can help you extract the payload information from the server responses. This feature is particularly useful for XSS attacks, because when the injected script is echoed back to the user Burp Intruder will help you locate the payload echoed back.

==Epilogue==

This post showed that you can increase payload diversity in order to have better results (meaning bypass web application filters). Obfuscated payload tests must be a de facto standard in every penetration engagement. This technique can help you understand what type of payloads you should try to inject while testing a web application and also help you to improve semi manual test by mimicking the behavior of a web application scanner.   